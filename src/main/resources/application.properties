# Application Configuration
spring.application.name=orders-service

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Logging Configuration
logging.level.br.com.ml.mktplace=INFO
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Application Properties
app.name=orders-system
app.version=0.0.1-SNAPSHOT
app.max-items-per-order=100

# Database Configuration (default values)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:orders_db}
spring.datasource.username=${DB_USERNAME:orders_user}
spring.datasource.password=${DB_PASSWORD:orders_pass}

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Database Pool Configuration
app.database.pool.maximum-pool-size=20
app.database.pool.minimum-idle=5
app.database.pool.connection-timeout=30000
app.database.pool.idle-timeout=600000
app.database.pool.max-lifetime=1800000

# Cache Configuration (Redis)
# Use Spring Boot 3 property prefix "spring.data.redis.*" consistently across profiles
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=5000ms
spring.data.redis.password=${REDIS_PASSWORD:redis_pass}
app.cache.ttl-hours=8
app.cache.pool.max-total=20
app.cache.pool.max-idle=8
app.cache.pool.min-idle=2
app.cache.timeout=5000

# HTTP Client Configuration
app.http.timeout.connection=5000
app.http.timeout.read=10000
app.http.retry.max-attempts=3
app.http.retry.initial-interval=1000
app.http.retry.multiplier=2.0
app.http.retry.max-interval=10000

## Distribution Center API Configuration
# External HTTP client removed; distribution centers are generated in-process.
# Historical properties removed: app.distribution-center.base-url, app.api.distribution-center.*

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
app.kafka.producer.retries=3
app.kafka.producer.batch-size=16384
app.kafka.producer.linger-ms=10
app.kafka.producer.buffer-memory=33554432
app.kafka.producer.acks=all
app.kafka.producer.enable-idempotence=true

# OpenAPI Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Actuator / Management Endpoints
management.endpoints.web.exposure.include=health,info,prometheus,metrics,loggers
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=when_authorized
management.metrics.tags.application=${spring.application.name}
management.prometheus.metrics.export.enabled=true

# Kafka Consumer (added for event-driven processing tests)
app.kafka.consumer.group-id=orders-service-it-consumer

# Geocoding - fixed key; replace with env/secret manager in real setups
app.geocoding.base-url=https://api.api-ninjas.com/v1/geocoding
app.geocoding.api-key=hvEWfs7gJxlRcAKxAzCx2A==JiywnRdjcDEfGsTi